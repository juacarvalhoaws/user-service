{
	"info": {
		"_postman_id": "1db2746e-809e-4291-a048-7dd9321bbb09",
		"name": "user service",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37213195"
	},
	"item": [
		{
			"name": "Create User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"pm.test(\"Response has UserID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('UserID');",
							"    pm.collectionVariables.set(\"UserID\", jsonData.UserID);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"John\",\n  \"lastname\": \"Doe\",\n  \"email\": \"john.doe@example2.com\",\n  \"dob\": \"1990-01-01\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qwzj7d4ouk.execute-api.us-east-1.amazonaws.com/dev/users",
					"protocol": "https",
					"host": [
						"qwzj7d4ouk",
						"execute-api",
						"us-east-1",
						"amazonaws",
						"com"
					],
					"path": [
						"dev",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User  Negative Test -  Missing Field",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"John\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qwzj7d4ouk.execute-api.us-east-1.amazonaws.com/dev/users",
					"protocol": "https",
					"host": [
						"qwzj7d4ouk",
						"execute-api",
						"us-east-1",
						"amazonaws",
						"com"
					],
					"path": [
						"dev",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Users",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains items\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('items');",
							"    pm.expect(jsonData.items.length).to.be.above(0);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://qwzj7d4ouk.execute-api.us-east-1.amazonaws.com/dev/users",
					"protocol": "https",
					"host": [
						"qwzj7d4ouk",
						"execute-api",
						"us-east-1",
						"amazonaws",
						"com"
					],
					"path": [
						"dev",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User by UserID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains UserID\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('UserID', pm.collectionVariables.get(\"UserID\"));",
							"});",
							"",
							"pm.test(\"Response has correct fields\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('name');",
							"    pm.expect(jsonData).to.have.property('lastname');",
							"    pm.expect(jsonData).to.have.property('email');",
							"    pm.expect(jsonData).to.have.property('dob');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://qwzj7d4ouk.execute-api.us-east-1.amazonaws.com/dev/users/{{UserID}}",
					"protocol": "https",
					"host": [
						"qwzj7d4ouk",
						"execute-api",
						"us-east-1",
						"amazonaws",
						"com"
					],
					"path": [
						"dev",
						"users",
						"{{UserID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get User BY UserID - User Not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response contains error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('error');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qwzj7d4ouk.execute-api.us-east-1.amazonaws.com/dev/users/non-existing-id",
					"protocol": "https",
					"host": [
						"qwzj7d4ouk",
						"execute-api",
						"us-east-1",
						"amazonaws",
						"com"
					],
					"path": [
						"dev",
						"users",
						"non-existing-id"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains updated lastname\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('lastname', 'Smith');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"John\",\n  \"lastname\": \"Smith\",\n  \"email\": \"john.doe@example2.com\",\n  \"dob\": \"1990-01-01\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qwzj7d4ouk.execute-api.us-east-1.amazonaws.com/dev/users/{{UserID}}",
					"protocol": "https",
					"host": [
						"qwzj7d4ouk",
						"execute-api",
						"us-east-1",
						"amazonaws",
						"com"
					],
					"path": [
						"dev",
						"users",
						"{{UserID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update User Negative Test - Invalid Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"",
							"pm.test(\"Response contains error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('error');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"\",\n  \"lastname\": \"Smith\",\n  \"email\": \"john.doe@example2.com\",\n  \"dob\": \"1990-01-01\"\n}\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qwzj7d4ouk.execute-api.us-east-1.amazonaws.com/dev/users/{{UserID}}",
					"protocol": "https",
					"host": [
						"qwzj7d4ouk",
						"execute-api",
						"us-east-1",
						"amazonaws",
						"com"
					],
					"path": [
						"dev",
						"users",
						"{{UserID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://qwzj7d4ouk.execute-api.us-east-1.amazonaws.com/dev/users/{{UserID}}",
					"protocol": "https",
					"host": [
						"qwzj7d4ouk",
						"execute-api",
						"us-east-1",
						"amazonaws",
						"com"
					],
					"path": [
						"dev",
						"users",
						"{{UserID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete User Negative Test - User Not Found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Response contains error message\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property('error');",
							"});",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://qwzj7d4ouk.execute-api.us-east-1.amazonaws.com/dev/users/{{UserID}}",
					"protocol": "https",
					"host": [
						"qwzj7d4ouk",
						"execute-api",
						"us-east-1",
						"amazonaws",
						"com"
					],
					"path": [
						"dev",
						"users",
						"{{UserID}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "UserID",
			"value": ""
		}
	]
}